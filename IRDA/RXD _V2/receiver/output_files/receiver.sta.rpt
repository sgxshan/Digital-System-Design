TimeQuest Timing Analyzer report for receiver
Mon Dec 07 15:18:29 2015
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Setup: 'rxd_controller:inst|p_state.S'
 13. Slow Model Hold: 'clk'
 14. Slow Model Hold: 'rxd_controller:inst|p_state.S'
 15. Slow Model Minimum Pulse Width: 'clk'
 16. Slow Model Minimum Pulse Width: 'rxd_controller:inst|p_state.S'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk'
 27. Fast Model Setup: 'rxd_controller:inst|p_state.S'
 28. Fast Model Hold: 'clk'
 29. Fast Model Hold: 'rxd_controller:inst|p_state.S'
 30. Fast Model Minimum Pulse Width: 'clk'
 31. Fast Model Minimum Pulse Width: 'rxd_controller:inst|p_state.S'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; receiver                                                           ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C35F672C6                                                       ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processors 2-4         ;   0.0%      ;
+----------------------------+-------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                       ;
+-------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------------+
; Clock Name                    ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                           ;
+-------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------------+
; clk                           ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                           ;
; rxd_controller:inst|p_state.S ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { rxd_controller:inst|p_state.S } ;
+-------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 290.11 MHz ; 290.11 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------------+
; Slow Model Setup Summary                               ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -2.447 ; -69.563       ;
; rxd_controller:inst|p_state.S ; -0.775 ; -4.720        ;
+-------------------------------+--------+---------------+


+--------------------------------------------------------+
; Slow Model Hold Summary                                ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -2.544 ; -4.675        ;
; rxd_controller:inst|p_state.S ; 0.569  ; 0.000         ;
+-------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                 ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -1.380 ; -32.380       ;
; rxd_controller:inst|p_state.S ; 0.500  ; 0.000         ;
+-------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                  ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.447 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.469      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.424 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.446      ;
; -2.327 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.363      ;
; -2.327 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.363      ;
; -2.327 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.363      ;
; -2.327 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.363      ;
; -2.327 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.363      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.309 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.345      ;
; -2.304 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.340      ;
; -2.304 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.340      ;
; -2.304 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.340      ;
; -2.304 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.340      ;
; -2.304 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; 0.000      ; 3.340      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.289 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.311      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.286 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.322      ;
; -2.269 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 3.305      ;
; -2.269 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 3.305      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.259 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.281      ;
; -2.246 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 3.282      ;
; -2.246 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 3.282      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.227 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.249      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.201 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.223      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.199 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.221      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
; -2.179 ; baud_done:inst6|p_count[6]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.014     ; 3.201      ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'rxd_controller:inst|p_state.S'                                                                                                         ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; -0.775 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.439      ; 0.849      ;
; -0.743 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.644      ; 0.713      ;
; -0.561 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.644      ; 0.723      ;
; -0.556 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.644      ; 0.714      ;
; -0.526 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.645      ; 0.723      ;
; -0.524 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.643      ; 0.721      ;
; -0.519 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.644      ; 0.714      ;
; -0.516 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.644      ; 0.714      ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                        ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+
; -2.544 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk         ; 0.000        ; 2.685      ; 0.657      ;
; -2.131 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.S ; clk         ; 0.000        ; 2.685      ; 1.070      ;
; -2.044 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk         ; -0.500       ; 2.685      ; 0.657      ;
; -1.631 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.S ; clk         ; -0.500       ; 2.685      ; 1.070      ;
; 0.391  ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.P ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.Q ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.542  ; baud_done:inst6|p_count[11]   ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.808      ;
; 0.671  ; rxd_shift:inst8|pshift[2]     ; rxd_shift:inst8|pshift[1]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.937      ;
; 0.795  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[0]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.061      ;
; 0.804  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[0]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.070      ;
; 0.806  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.072      ;
; 0.813  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[1]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.079      ;
; 0.815  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.081      ;
; 0.816  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.082      ;
; 0.834  ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.100      ;
; 0.845  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.111      ;
; 0.846  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.112      ;
; 0.846  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.112      ;
; 0.848  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.114      ;
; 0.849  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.115      ;
; 0.856  ; rxd_shift:inst8|pshift[5]     ; rxd_shift:inst8|pshift[4]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.122      ;
; 0.856  ; rxd_shift:inst8|pshift[3]     ; rxd_shift:inst8|pshift[2]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.122      ;
; 0.863  ; rxd_shift:inst8|pshift[4]     ; rxd_shift:inst8|pshift[3]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.129      ;
; 0.864  ; rxd_shift:inst8|pshift[6]     ; rxd_shift:inst8|pshift[5]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.130      ;
; 0.866  ; rxd_shift:inst8|pshift[7]     ; rxd_shift:inst8|pshift[6]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.132      ;
; 0.867  ; rxd_shift:inst8|pshift[1]     ; rxd_shift:inst8|pshift[0]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.133      ;
; 0.979  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.245      ;
; 0.982  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.R ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.248      ;
; 1.002  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[9]     ; clk                           ; clk         ; 0.000        ; 0.003      ; 1.271      ;
; 1.002  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.003      ; 1.271      ;
; 1.010  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.276      ;
; 1.011  ; rxd_shift:inst8|pshift[9]     ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.277      ;
; 1.019  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.285      ;
; 1.038  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.304      ;
; 1.126  ; rxd_shift:inst8|pshift[8]     ; rxd_shift:inst8|pshift[7]     ; clk                           ; clk         ; 0.000        ; -0.014     ; 1.378      ;
; 1.178  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[1]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.444      ;
; 1.187  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.453      ;
; 1.189  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.455      ;
; 1.196  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.462      ;
; 1.212  ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.478      ;
; 1.220  ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.486      ;
; 1.231  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.497      ;
; 1.232  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.498      ;
; 1.232  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.498      ;
; 1.234  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.500      ;
; 1.235  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.501      ;
; 1.249  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.515      ;
; 1.258  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.524      ;
; 1.260  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.526      ;
; 1.267  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.533      ;
; 1.291  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.557      ;
; 1.302  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.568      ;
; 1.303  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.569      ;
; 1.305  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.571      ;
; 1.320  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.586      ;
; 1.329  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.595      ;
; 1.331  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.597      ;
; 1.338  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.604      ;
; 1.344  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[0]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.610      ;
; 1.344  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.610      ;
; 1.344  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.610      ;
; 1.344  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.610      ;
; 1.356  ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[9]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.622      ;
; 1.362  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[3]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.617      ;
; 1.362  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[0]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.617      ;
; 1.362  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.628      ;
; 1.362  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.628      ;
; 1.363  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[6]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.618      ;
; 1.367  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[4]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.622      ;
; 1.367  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[7]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.622      ;
; 1.368  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[1]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.623      ;
; 1.369  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[2]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.624      ;
; 1.370  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[5]     ; clk                           ; clk         ; 0.000        ; -0.011     ; 1.625      ;
; 1.373  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.639      ;
; 1.376  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.642      ;
; 1.391  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.657      ;
; 1.391  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.657      ;
; 1.396  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.662      ;
; 1.400  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.666      ;
; 1.405  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.671      ;
; 1.409  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.675      ;
; 1.424  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.690      ;
; 1.433  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.699      ;
; 1.433  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.699      ;
; 1.444  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.710      ;
; 1.462  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.728      ;
; 1.462  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.728      ;
; 1.462  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.728      ;
; 1.467  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.733      ;
; 1.476  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.742      ;
; 1.480  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.746      ;
; 1.495  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.761      ;
; 1.504  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.770      ;
; 1.504  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.770      ;
; 1.512  ; counter:inst9|p_cnt[1]        ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.778      ;
; 1.533  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.799      ;
; 1.533  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.799      ;
; 1.533  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.799      ;
; 1.547  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.813      ;
; 1.551  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 1.817      ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'rxd_controller:inst|p_state.S'                                                                                                         ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; 0.569 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.644      ; 0.713      ;
; 0.570 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.644      ; 0.714      ;
; 0.570 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.644      ; 0.714      ;
; 0.570 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.644      ; 0.714      ;
; 0.578 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.645      ; 0.723      ;
; 0.578 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.643      ; 0.721      ;
; 0.579 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.644      ; 0.723      ;
; 0.910 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.439      ; 0.849      ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[3]|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'rxd_controller:inst|p_state.S'                                                                         ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                         ; Clock Edge ; Target                          ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[2]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[2]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[2]|datad        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[2]|datad        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[0]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[0]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[1]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[1]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[2]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[2]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[3]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[3]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[0]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[0]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[1]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[1]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[2]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[2]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[3]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[3]    ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 7.355 ; 7.355 ; Rise       ; clk             ;
; reset     ; clk        ; 4.879 ; 4.879 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; -5.214 ; -5.214 ; Rise       ; clk             ;
; reset     ; clk        ; -3.382 ; -3.382 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                        ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise   ; Fall   ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+
; framing_error ; clk                           ; 9.246  ; 9.246  ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 10.076 ; 10.076 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 6.395  ;        ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 6.579  ;        ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 9.531  ; 9.531  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 9.250  ; 9.250  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 9.261  ; 9.261  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 9.195  ; 9.195  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 9.235  ; 9.235  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 9.223  ; 9.223  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 9.531  ; 9.531  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 9.414  ; 9.414  ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 9.106  ; 9.106  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 8.530  ; 8.530  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 8.566  ; 8.566  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 8.556  ; 8.556  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 9.097  ; 9.097  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 9.106  ; 9.106  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 9.085  ; 9.085  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 9.076  ; 9.076  ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;        ; 6.395  ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;        ; 6.579  ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+


+------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                              ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise  ; Fall  ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; framing_error ; clk                           ; 9.246 ; 9.246 ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 9.294 ; 9.294 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 6.395 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 6.579 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 8.765 ; 8.765 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 8.807 ; 8.807 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 8.819 ; 8.819 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 8.765 ; 8.765 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 8.785 ; 8.785 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 8.771 ; 8.771 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 9.089 ; 9.089 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 8.976 ; 8.976 ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 8.330 ; 8.330 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 8.352 ; 8.352 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 8.369 ; 8.369 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 8.330 ; 8.330 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 8.899 ; 8.899 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 8.908 ; 8.908 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 8.886 ; 8.886 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 8.878 ; 8.878 ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;       ; 6.395 ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;       ; 6.579 ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+


+--------------------------------------------------------+
; Fast Model Setup Summary                               ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -0.639 ; -16.752       ;
; rxd_controller:inst|p_state.S ; -0.209 ; -0.980        ;
+-------------------------------+--------+---------------+


+--------------------------------------------------------+
; Fast Model Hold Summary                                ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -1.587 ; -3.023        ;
; rxd_controller:inst|p_state.S ; 0.696  ; 0.000         ;
+-------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                 ;
+-------------------------------+--------+---------------+
; Clock                         ; Slack  ; End Point TNS ;
+-------------------------------+--------+---------------+
; clk                           ; -1.380 ; -32.380       ;
; rxd_controller:inst|p_state.S ; 0.500  ; 0.000         ;
+-------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                  ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.639 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.656      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.638 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.655      ;
; -0.578 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.578 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.578 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.578 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.578 ; baud_done:inst6|p_count[5]  ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.610      ;
; -0.577 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.609      ;
; -0.577 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.609      ;
; -0.577 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.609      ;
; -0.577 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.609      ;
; -0.577 ; baud_done:inst6|p_count[11] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.609      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.563 ; baud_done:inst6|p_count[10] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.580      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.552 ; baud_done:inst6|p_count[9]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.569      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.543 ; baud_done:inst6|p_count[5]  ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.575      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.542 ; baud_done:inst6|p_count[11] ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.574      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.522 ; baud_done:inst6|p_count[3]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.539      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.515 ; baud_done:inst6|p_count[1]  ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.532      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.512 ; counter:inst9|p_cnt[3]      ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.529      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
; -0.505 ; counter:inst9|p_cnt[0]      ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.015     ; 1.522      ;
+--------+-----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'rxd_controller:inst|p_state.S'                                                                                                         ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; -0.209 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.058      ; 0.411      ;
; -0.195 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.155      ; 0.351      ;
; -0.106 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.154      ; 0.358      ;
; -0.104 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.155      ; 0.354      ;
; -0.093 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.153      ; 0.357      ;
; -0.092 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.156      ; 0.358      ;
; -0.091 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.154      ; 0.354      ;
; -0.090 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; rxd_controller:inst|p_state.S ; 0.500        ; 0.154      ; 0.355      ;
+--------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                        ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+
; -1.587 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk         ; 0.000        ; 1.661      ; 0.367      ;
; -1.436 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.S ; clk         ; 0.000        ; 1.661      ; 0.518      ;
; -1.087 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk         ; -0.500       ; 1.661      ; 0.367      ;
; -0.936 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.S ; clk         ; -0.500       ; 1.661      ; 0.518      ;
; 0.215  ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.P ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.Q ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.250  ; baud_done:inst6|p_count[11]   ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.402      ;
; 0.326  ; rxd_shift:inst8|pshift[2]     ; rxd_shift:inst8|pshift[1]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.478      ;
; 0.355  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[0]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.507      ;
; 0.361  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[0]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.513      ;
; 0.363  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.366  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[1]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.518      ;
; 0.367  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.519      ;
; 0.370  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.522      ;
; 0.371  ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.376  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.528      ;
; 0.376  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.528      ;
; 0.377  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.529      ;
; 0.380  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.532      ;
; 0.380  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.532      ;
; 0.408  ; rxd_shift:inst8|pshift[3]     ; rxd_shift:inst8|pshift[2]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.560      ;
; 0.410  ; rxd_shift:inst8|pshift[5]     ; rxd_shift:inst8|pshift[4]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.562      ;
; 0.412  ; rxd_shift:inst8|pshift[6]     ; rxd_shift:inst8|pshift[5]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.564      ;
; 0.412  ; rxd_shift:inst8|pshift[4]     ; rxd_shift:inst8|pshift[3]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.564      ;
; 0.414  ; rxd_shift:inst8|pshift[7]     ; rxd_shift:inst8|pshift[6]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.566      ;
; 0.414  ; rxd_shift:inst8|pshift[1]     ; rxd_shift:inst8|pshift[0]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.566      ;
; 0.437  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.589      ;
; 0.445  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.R ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.597      ;
; 0.448  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.600      ;
; 0.450  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.602      ;
; 0.461  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.613      ;
; 0.465  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[9]     ; clk                           ; clk         ; 0.000        ; 0.002      ; 0.619      ;
; 0.465  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.002      ; 0.619      ;
; 0.469  ; rxd_shift:inst8|pshift[9]     ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.621      ;
; 0.493  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[1]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.645      ;
; 0.499  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.501  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.653      ;
; 0.504  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.656      ;
; 0.511  ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.663      ;
; 0.516  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.668      ;
; 0.516  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.668      ;
; 0.517  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.669      ;
; 0.520  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.672      ;
; 0.520  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.672      ;
; 0.528  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[2]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.680      ;
; 0.534  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.536  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.688      ;
; 0.539  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.691      ;
; 0.544  ; rxd_shift:inst8|pshift[8]     ; rxd_shift:inst8|pshift[7]     ; clk                           ; clk         ; 0.000        ; -0.015     ; 0.681      ;
; 0.551  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.703      ;
; 0.552  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.704      ;
; 0.555  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.707      ;
; 0.560  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.563  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.715      ;
; 0.568  ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[8]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.720      ;
; 0.569  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.721      ;
; 0.571  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.723      ;
; 0.574  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.726      ;
; 0.575  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[3]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.727      ;
; 0.587  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.739      ;
; 0.588  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.740      ;
; 0.590  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.742      ;
; 0.590  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.742      ;
; 0.595  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.747      ;
; 0.598  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.750      ;
; 0.601  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.753      ;
; 0.604  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.756      ;
; 0.609  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.761      ;
; 0.610  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.762      ;
; 0.610  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[4]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.762      ;
; 0.622  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.774      ;
; 0.623  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.775      ;
; 0.625  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.777      ;
; 0.629  ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[9]     ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.781      ;
; 0.630  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.782      ;
; 0.633  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.785      ;
; 0.636  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[3]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.775      ;
; 0.636  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[4]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.788      ;
; 0.637  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[6]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.776      ;
; 0.639  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[0]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.778      ;
; 0.640  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[4]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.779      ;
; 0.642  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[2]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.781      ;
; 0.642  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[5]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.781      ;
; 0.642  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[7]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.781      ;
; 0.643  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[1]     ; clk                           ; clk         ; 0.000        ; -0.013     ; 0.782      ;
; 0.644  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.796      ;
; 0.645  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.645  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[5]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.645  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[8]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.797      ;
; 0.660  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[0]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.660  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[2]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.660  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[3]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.660  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[1]        ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.660  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.665  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[11]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.817      ;
; 0.668  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.820      ;
; 0.679  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[7]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.831      ;
; 0.680  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[10]   ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.832      ;
; 0.680  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[6]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.832      ;
; 0.680  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[9]    ; clk                           ; clk         ; 0.000        ; 0.000      ; 0.832      ;
+--------+-------------------------------+-------------------------------+-------------------------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'rxd_controller:inst|p_state.S'                                                                                                         ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+
; 0.696 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.155      ; 0.351      ;
; 0.699 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.155      ; 0.354      ;
; 0.700 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.154      ; 0.354      ;
; 0.701 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.154      ; 0.355      ;
; 0.702 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.156      ; 0.358      ;
; 0.704 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.153      ; 0.357      ;
; 0.704 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.154      ; 0.358      ;
; 0.853 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; rxd_controller:inst|p_state.S ; -0.500       ; 0.058      ; 0.411      ;
+-------+---------------------------+------------------------------+--------------+-------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[3]|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'rxd_controller:inst|p_state.S'                                                                         ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                         ; Clock Edge ; Target                          ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[2]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[2]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out1[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[0]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[1]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[2]|datad        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[2]|datad        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst8|data_out2[3]|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S|regout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Rise       ; inst|p_state.S~clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[0]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[0]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[1]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[1]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[2]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[2]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[3]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out1[3]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[0]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[0]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[1]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[1]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[2]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[2]    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[3]    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; rxd_controller:inst|p_state.S ; Fall       ; rxd_shift:inst8|data_out2[3]    ;
+-------+--------------+----------------+------------------+-------------------------------+------------+---------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 3.867 ; 3.867 ; Rise       ; clk             ;
; reset     ; clk        ; 2.646 ; 2.646 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; -2.833 ; -2.833 ; Rise       ; clk             ;
; reset     ; clk        ; -1.863 ; -1.863 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                      ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise  ; Fall  ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; framing_error ; clk                           ; 5.070 ; 5.070 ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 5.405 ; 5.405 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 3.313 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 3.408 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 4.891 ; 4.891 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 4.760 ; 4.760 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 4.765 ; 4.765 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 4.733 ; 4.733 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 4.736 ; 4.736 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 4.733 ; 4.733 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 4.891 ; 4.891 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 4.829 ; 4.829 ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 4.688 ; 4.688 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 4.402 ; 4.402 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 4.406 ; 4.406 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 4.402 ; 4.402 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 4.688 ; 4.688 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 4.681 ; 4.681 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 4.662 ; 4.662 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 4.660 ; 4.660 ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;       ; 3.313 ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;       ; 3.408 ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+


+------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                              ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise  ; Fall  ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; framing_error ; clk                           ; 5.070 ; 5.070 ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 5.070 ; 5.070 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 3.313 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 3.408 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 4.561 ; 4.561 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 4.601 ; 4.601 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 4.604 ; 4.604 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 4.561 ; 4.561 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 4.572 ; 4.572 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 4.567 ; 4.567 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 4.727 ; 4.727 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 4.677 ; 4.677 ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 4.299 ; 4.299 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 4.299 ; 4.299 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 4.303 ; 4.303 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 4.302 ; 4.302 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 4.579 ; 4.579 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 4.577 ; 4.577 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 4.562 ; 4.562 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 4.555 ; 4.555 ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;       ; 3.313 ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;       ; 3.408 ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+


+----------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                          ;
+--------------------------------+---------+--------+----------+---------+---------------------+
; Clock                          ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack               ; -2.447  ; -2.544 ; N/A      ; N/A     ; -1.380              ;
;  clk                           ; -2.447  ; -2.544 ; N/A      ; N/A     ; -1.380              ;
;  rxd_controller:inst|p_state.S ; -0.775  ; 0.569  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS                ; -74.283 ; -4.675 ; 0.0      ; 0.0     ; -32.38              ;
;  clk                           ; -69.563 ; -4.675 ; N/A      ; N/A     ; -32.380             ;
;  rxd_controller:inst|p_state.S ; -4.720  ; 0.000  ; N/A      ; N/A     ; 0.000               ;
+--------------------------------+---------+--------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 7.355 ; 7.355 ; Rise       ; clk             ;
; reset     ; clk        ; 4.879 ; 4.879 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; -2.833 ; -2.833 ; Rise       ; clk             ;
; reset     ; clk        ; -1.863 ; -1.863 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                        ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise   ; Fall   ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+
; framing_error ; clk                           ; 9.246  ; 9.246  ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 10.076 ; 10.076 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 6.395  ;        ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 6.579  ;        ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 9.531  ; 9.531  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 9.250  ; 9.250  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 9.261  ; 9.261  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 9.195  ; 9.195  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 9.235  ; 9.235  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 9.223  ; 9.223  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 9.531  ; 9.531  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 9.414  ; 9.414  ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 9.106  ; 9.106  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 8.530  ; 8.530  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 8.566  ; 8.566  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 8.556  ; 8.556  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 9.097  ; 9.097  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 9.106  ; 9.106  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 9.085  ; 9.085  ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 9.076  ; 9.076  ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;        ; 6.395  ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;        ; 6.579  ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+--------+--------+------------+-------------------------------+


+------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                              ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; Data Port     ; Clock Port                    ; Rise  ; Fall  ; Clock Edge ; Clock Reference               ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+
; framing_error ; clk                           ; 5.070 ; 5.070 ; Rise       ; clk                           ;
; parity_error  ; clk                           ; 5.070 ; 5.070 ; Rise       ; clk                           ;
; framing_error ; rxd_controller:inst|p_state.S ; 3.313 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ; 3.408 ;       ; Rise       ; rxd_controller:inst|p_state.S ;
; 7seg1[*]      ; rxd_controller:inst|p_state.S ; 4.561 ; 4.561 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[0]     ; rxd_controller:inst|p_state.S ; 4.601 ; 4.601 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[1]     ; rxd_controller:inst|p_state.S ; 4.604 ; 4.604 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[2]     ; rxd_controller:inst|p_state.S ; 4.561 ; 4.561 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[3]     ; rxd_controller:inst|p_state.S ; 4.572 ; 4.572 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[4]     ; rxd_controller:inst|p_state.S ; 4.567 ; 4.567 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[5]     ; rxd_controller:inst|p_state.S ; 4.727 ; 4.727 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg1[6]     ; rxd_controller:inst|p_state.S ; 4.677 ; 4.677 ; Fall       ; rxd_controller:inst|p_state.S ;
; 7seg2[*]      ; rxd_controller:inst|p_state.S ; 4.299 ; 4.299 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[0]     ; rxd_controller:inst|p_state.S ; 4.299 ; 4.299 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[1]     ; rxd_controller:inst|p_state.S ; 4.303 ; 4.303 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[2]     ; rxd_controller:inst|p_state.S ; 4.302 ; 4.302 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[3]     ; rxd_controller:inst|p_state.S ; 4.579 ; 4.579 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[4]     ; rxd_controller:inst|p_state.S ; 4.577 ; 4.577 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[5]     ; rxd_controller:inst|p_state.S ; 4.562 ; 4.562 ; Fall       ; rxd_controller:inst|p_state.S ;
;  7seg2[6]     ; rxd_controller:inst|p_state.S ; 4.555 ; 4.555 ; Fall       ; rxd_controller:inst|p_state.S ;
; framing_error ; rxd_controller:inst|p_state.S ;       ; 3.313 ; Fall       ; rxd_controller:inst|p_state.S ;
; parity_error  ; rxd_controller:inst|p_state.S ;       ; 3.408 ; Fall       ; rxd_controller:inst|p_state.S ;
+---------------+-------------------------------+-------+-------+------------+-------------------------------+


+-----------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                           ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
; From Clock                    ; To Clock                      ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
; clk                           ; clk                           ; 963      ; 0        ; 0        ; 0        ;
; rxd_controller:inst|p_state.S ; clk                           ; 2        ; 2        ; 0        ; 0        ;
; clk                           ; rxd_controller:inst|p_state.S ; 0        ; 0        ; 8        ; 0        ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                            ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
; From Clock                    ; To Clock                      ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
; clk                           ; clk                           ; 963      ; 0        ; 0        ; 0        ;
; rxd_controller:inst|p_state.S ; clk                           ; 2        ; 2        ; 0        ; 0        ;
; clk                           ; rxd_controller:inst|p_state.S ; 0        ; 0        ; 8        ; 0        ;
+-------------------------------+-------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 2     ; 2    ;
; Unconstrained Input Port Paths  ; 35    ; 35   ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 68    ; 68   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Mon Dec 07 15:18:17 2015
Info: Command: quartus_sta receiver -c receiver
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 4 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 2 of the 2 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 8 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'receiver.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name rxd_controller:inst|p_state.S rxd_controller:inst|p_state.S
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.447
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.447       -69.563 clk 
    Info (332119):    -0.775        -4.720 rxd_controller:inst|p_state.S 
Info (332146): Worst-case hold slack is -2.544
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.544        -4.675 clk 
    Info (332119):     0.569         0.000 rxd_controller:inst|p_state.S 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -32.380 clk 
    Info (332119):     0.500         0.000 rxd_controller:inst|p_state.S 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.639
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.639       -16.752 clk 
    Info (332119):    -0.209        -0.980 rxd_controller:inst|p_state.S 
Info (332146): Worst-case hold slack is -1.587
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.587        -3.023 clk 
    Info (332119):     0.696         0.000 rxd_controller:inst|p_state.S 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -32.380 clk 
    Info (332119):     0.500         0.000 rxd_controller:inst|p_state.S 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 431 megabytes
    Info: Processing ended: Mon Dec 07 15:18:29 2015
    Info: Elapsed time: 00:00:12
    Info: Total CPU time (on all processors): 00:00:01


