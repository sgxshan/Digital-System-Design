module controller (input send, input reset, input clk, input baud_done, input bit_done, output reg shift,output reg count,output reg reset_baud, output reg clear_bit,output reg load_shift);
parameter P=2'b00, Q=2'b01, S=2'b11;
reg [1:0]p_state, n_state;
always @ (posedge clk)
 begin
	if (reset)
		p_state <= P;
	else 
		p_state <= n_state;
end
always @ (send, p_state,send,baud_done, bit_done)
	begin 
		reset_baud=0;
		clear_bit=0; 
		load_shift=0;
		count=0;
		shift=0;
		n_state=p_state;
		case (p_state)
			P: 
				begin
					if(send)
						begin 
							clear_bit=1;
							load_shift=1;
							reset_baud=1;
							n_state=Q;
						end
					else 
						n_state=P;
				end
			Q: 
				begin
					if(baud_done)
						begin
							if(bit_done)
								n_state=S;
							else
								begin
									count=1;
									shift=1;
								end
						end
					else
						n_state=Q;
				end
			S: 
				begin
					if(!send)
						n_state=P;
					else
						n_state=S;
				end
		endcase 
	end
endmodule

