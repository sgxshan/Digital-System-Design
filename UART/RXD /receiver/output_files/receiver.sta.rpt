TimeQuest Timing Analyzer report for receiver
Fri Nov 13 15:53:29 2015
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Setup: 'data_in'
 13. Slow Model Hold: 'data_in'
 14. Slow Model Hold: 'clk'
 15. Slow Model Minimum Pulse Width: 'clk'
 16. Slow Model Minimum Pulse Width: 'data_in'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk'
 27. Fast Model Setup: 'data_in'
 28. Fast Model Hold: 'data_in'
 29. Fast Model Hold: 'clk'
 30. Fast Model Minimum Pulse Width: 'clk'
 31. Fast Model Minimum Pulse Width: 'data_in'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; receiver                                           ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C35F672C6                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                              ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets     ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }     ;
; data_in    ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { data_in } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 292.83 MHz ; 292.83 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------+
; Slow Model Setup Summary         ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; clk     ; -2.415 ; -69.040       ;
; data_in ; 1.450  ; 0.000         ;
+---------+--------+---------------+


+----------------------------------+
; Slow Model Hold Summary          ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; data_in ; -1.484 ; -10.879       ;
; clk     ; 0.016  ; 0.000         ;
+---------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+---------+--------+---------------------+
; Clock   ; Slack  ; End Point TNS       ;
+---------+--------+---------------------+
; clk     ; -1.380 ; -32.380             ;
; data_in ; -1.222 ; -1.222              ;
+---------+--------+---------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                 ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                  ; To Node                     ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.415 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.451      ;
; -2.372 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.407      ;
; -2.372 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.407      ;
; -2.372 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.407      ;
; -2.372 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.407      ;
; -2.372 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.407      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.358 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.394      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.336 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.372      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.316 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.352      ;
; -2.315 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.350      ;
; -2.315 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.350      ;
; -2.315 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.350      ;
; -2.315 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.350      ;
; -2.315 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.350      ;
; -2.293 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.328      ;
; -2.293 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.328      ;
; -2.293 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.328      ;
; -2.293 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.328      ;
; -2.293 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.328      ;
; -2.273 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.308      ;
; -2.273 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.308      ;
; -2.273 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.308      ;
; -2.273 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.308      ;
; -2.273 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 3.308      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.228 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; -0.001     ; 3.263      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.221 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.257      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
; -2.201 ; baud_done:inst6|p_count[2] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.237      ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'data_in'                                                                                                            ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; 1.450 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; data_in     ; 1.000        ; 2.729      ; 1.607      ;
; 1.627 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; data_in     ; 1.000        ; 2.709      ; 1.259      ;
; 1.654 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; data_in     ; 1.000        ; 2.726      ; 1.399      ;
; 1.657 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; data_in     ; 1.000        ; 2.729      ; 1.255      ;
; 1.660 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; data_in     ; 1.000        ; 2.739      ; 1.400      ;
; 1.664 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; data_in     ; 1.000        ; 2.739      ; 1.396      ;
; 1.667 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; data_in     ; 1.000        ; 2.739      ; 1.255      ;
; 1.667 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; data_in     ; 1.000        ; 2.735      ; 1.395      ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'data_in'                                                                                                              ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -1.484 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; data_in     ; 0.000        ; 2.739      ; 1.255      ;
; -1.474 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; data_in     ; 0.000        ; 2.729      ; 1.255      ;
; -1.450 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; data_in     ; 0.000        ; 2.709      ; 1.259      ;
; -1.343 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; data_in     ; 0.000        ; 2.739      ; 1.396      ;
; -1.340 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; data_in     ; 0.000        ; 2.735      ; 1.395      ;
; -1.339 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; data_in     ; 0.000        ; 2.739      ; 1.400      ;
; -1.327 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; data_in     ; 0.000        ; 2.726      ; 1.399      ;
; -1.122 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; data_in     ; 0.000        ; 2.729      ; 1.607      ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                      ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                     ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; 0.016 ; rxd_controller:inst|p_state.R ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.236      ; 1.518      ;
; 0.391 ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.Q ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.P ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.546 ; baud_done:inst6|p_count[11]   ; baud_done:inst6|p_count[11]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.812      ;
; 0.571 ; data_in                       ; rxd_controller:inst|p_state.P ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.520      ;
; 0.575 ; data_in                       ; rxd_controller:inst|p_state.S ; data_in      ; clk         ; 0.000        ; 3.919      ; 4.760      ;
; 0.661 ; data_in                       ; rxd_controller:inst|p_state.Q ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.610      ;
; 0.670 ; counter:inst9|p_cnt[4]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.236      ; 2.172      ;
; 0.674 ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.R ; clk          ; clk         ; 0.000        ; 0.000      ; 0.940      ;
; 0.676 ; data_in                       ; rxd_shift:inst8|pshift[9]     ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.625      ;
; 0.720 ; data_in                       ; counter:inst9|p_cnt[0]        ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.669      ;
; 0.720 ; data_in                       ; counter:inst9|p_cnt[1]        ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.669      ;
; 0.720 ; data_in                       ; counter:inst9|p_cnt[2]        ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.669      ;
; 0.720 ; data_in                       ; counter:inst9|p_cnt[3]        ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.669      ;
; 0.720 ; data_in                       ; counter:inst9|p_cnt[4]        ; data_in      ; clk         ; 0.000        ; 2.683      ; 3.669      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[0]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[2]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[3]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[4]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[5]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[6]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[7]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[8]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[9]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[10]   ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[11]   ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.728 ; data_in                       ; baud_done:inst6|p_count[1]    ; data_in      ; clk         ; 0.000        ; 2.684      ; 3.678      ;
; 0.799 ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.065      ;
; 0.813 ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[2]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.079      ;
; 0.816 ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.082      ;
; 0.816 ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[4]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.082      ;
; 0.819 ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[9]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.085      ;
; 0.822 ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[7]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.088      ;
; 0.839 ; rxd_shift:inst8|pshift[9]     ; rxd_shift:inst8|pshift[8]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.105      ;
; 0.839 ; rxd_shift:inst8|pshift[8]     ; rxd_shift:inst8|pshift[7]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.105      ;
; 0.841 ; rxd_shift:inst8|pshift[1]     ; rxd_shift:inst8|pshift[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.107      ;
; 0.844 ; rxd_shift:inst8|pshift[4]     ; rxd_shift:inst8|pshift[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.110      ;
; 0.845 ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.111      ;
; 0.846 ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[5]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.112      ;
; 0.846 ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[6]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.112      ;
; 0.963 ; counter:inst9|p_cnt[3]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.236      ; 2.465      ;
; 0.978 ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.244      ;
; 0.978 ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[10]   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.244      ;
; 0.979 ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[8]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.245      ;
; 0.982 ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[3]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.248      ;
; 0.985 ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[1]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.251      ;
; 1.011 ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[4]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.277      ;
; 1.019 ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[0]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.285      ;
; 1.053 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[7]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.319      ;
; 1.054 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[6]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.320      ;
; 1.059 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.325      ;
; 1.059 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[8]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.325      ;
; 1.060 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[4]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.326      ;
; 1.061 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[2]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.327      ;
; 1.064 ; rxd_shift:inst8|pshift[2]     ; rxd_shift:inst8|pshift[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.330      ;
; 1.071 ; counter:inst9|p_cnt[2]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.236      ; 2.573      ;
; 1.071 ; data_in                       ; rxd_controller:inst|p_state.P ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.520      ;
; 1.075 ; data_in                       ; rxd_controller:inst|p_state.S ; data_in      ; clk         ; -0.500       ; 3.919      ; 4.760      ;
; 1.109 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.375      ;
; 1.138 ; rxd_controller:inst|p_state.R ; rxd_controller:inst|p_state.R ; clk          ; clk         ; 0.000        ; 0.000      ; 1.404      ;
; 1.161 ; data_in                       ; rxd_controller:inst|p_state.Q ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.610      ;
; 1.176 ; data_in                       ; rxd_shift:inst8|pshift[9]     ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.625      ;
; 1.182 ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.448      ;
; 1.196 ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[3]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.462      ;
; 1.199 ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.465      ;
; 1.202 ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[10]   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.468      ;
; 1.218 ; rxd_shift:inst8|pshift[6]     ; rxd_shift:inst8|pshift[5]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.484      ;
; 1.220 ; data_in                       ; counter:inst9|p_cnt[0]        ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.669      ;
; 1.220 ; data_in                       ; counter:inst9|p_cnt[1]        ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.669      ;
; 1.220 ; data_in                       ; counter:inst9|p_cnt[2]        ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.669      ;
; 1.220 ; data_in                       ; counter:inst9|p_cnt[3]        ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.669      ;
; 1.220 ; data_in                       ; counter:inst9|p_cnt[4]        ; data_in      ; clk         ; -0.500       ; 2.683      ; 3.669      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[0]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[2]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[3]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[4]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[5]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[6]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[7]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[8]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[9]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[10]   ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[11]   ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.228 ; data_in                       ; baud_done:inst6|p_count[1]    ; data_in      ; clk         ; -0.500       ; 2.684      ; 3.678      ;
; 1.231 ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[4]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.497      ;
; 1.232 ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[7]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.498      ;
; 1.232 ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[6]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.498      ;
; 1.232 ; counter:inst9|p_cnt[1]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.236      ; 2.734      ;
; 1.246 ; rxd_shift:inst8|pshift[3]     ; rxd_shift:inst8|pshift[2]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.512      ;
; 1.253 ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.519      ;
; 1.259 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.525      ;
; 1.261 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[9]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.527      ;
; 1.266 ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.532      ;
; 1.267 ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[4]        ; clk          ; clk         ; 0.000        ; 0.000      ; 1.533      ;
; 1.270 ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.536      ;
; 1.273 ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[11]   ; clk          ; clk         ; 0.000        ; 0.000      ; 1.539      ;
; 1.278 ; baud_done:inst6|p_count[1]    ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 1.235      ; 2.779      ;
; 1.283 ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[5]     ; clk          ; clk         ; 0.000        ; 0.000      ; 1.549      ;
; 1.297 ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[8]    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.563      ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[3]|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'data_in'                                                                              ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                              ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; data_in ; Rise       ; data_in                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; data_in|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; data_in|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[1]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[1]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[2]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[2]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[3]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[3]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[1]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[1]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[2]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[2]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[3]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[3]        ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 0.958 ; 0.958 ; Rise       ; clk             ;
; reset     ; clk        ; 6.126 ; 6.126 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; -0.571 ; -0.571 ; Rise       ; clk             ;
; reset     ; clk        ; -4.029 ; -4.029 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------+
; Clock to Output Times                                                       ;
+---------------+------------+--------+--------+------------+-----------------+
; Data Port     ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+---------------+------------+--------+--------+------------+-----------------+
; framing_error ; clk        ; 9.393  ; 9.393  ; Rise       ; clk             ;
; parity_error  ; clk        ; 11.011 ; 11.011 ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 13.840 ; 13.840 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 13.557 ; 13.557 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 13.569 ; 13.569 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 13.503 ; 13.503 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 13.541 ; 13.541 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 13.530 ; 13.530 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 13.840 ; 13.840 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 13.726 ; 13.726 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 13.370 ; 13.370 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 13.146 ; 13.146 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 13.142 ; 13.142 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 13.114 ; 13.114 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 13.125 ; 13.125 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Fall       ; data_in         ;
+---------------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                               ;
+---------------+------------+--------+--------+------------+-----------------+
; Data Port     ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+---------------+------------+--------+--------+------------+-----------------+
; framing_error ; clk        ; 8.298  ; 8.298  ; Rise       ; clk             ;
; parity_error  ; clk        ; 9.960  ; 9.960  ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 11.473 ; 11.473 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 11.504 ; 11.504 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 11.516 ; 11.516 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 11.477 ; 11.477 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 11.485 ; 11.485 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 11.473 ; 11.473 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 11.785 ; 11.785 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 11.669 ; 11.669 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 11.577 ; 11.577 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 11.856 ; 11.856 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 11.854 ; 11.854 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 11.861 ; 11.861 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 11.614 ; 11.614 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 11.604 ; 11.604 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 11.577 ; 11.577 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 11.586 ; 11.586 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Fall       ; data_in         ;
+---------------+------------+--------+--------+------------+-----------------+


+----------------------------------+
; Fast Model Setup Summary         ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; clk     ; -0.596 ; -15.891       ;
; data_in ; 1.263  ; 0.000         ;
+---------+--------+---------------+


+----------------------------------+
; Fast Model Hold Summary          ;
+---------+--------+---------------+
; Clock   ; Slack  ; End Point TNS ;
+---------+--------+---------------+
; data_in ; -0.700 ; -5.131        ;
; clk     ; -0.079 ; -0.125        ;
+---------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+---------+--------+---------------------+
; Clock   ; Slack  ; End Point TNS       ;
+---------+--------+---------------------+
; clk     ; -1.380 ; -32.380             ;
; data_in ; -1.222 ; -1.222              ;
+---------+--------+---------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                 ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                  ; To Node                     ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+
; -0.596 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.627      ;
; -0.596 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.627      ;
; -0.596 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.627      ;
; -0.596 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.627      ;
; -0.596 ; baud_done:inst6|p_count[5] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.627      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.594 ; baud_done:inst6|p_count[5] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.626      ;
; -0.559 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.590      ;
; -0.559 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.590      ;
; -0.559 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.590      ;
; -0.559 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.590      ;
; -0.559 ; baud_done:inst6|p_count[8] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.590      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.557 ; baud_done:inst6|p_count[8] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.589      ;
; -0.555 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.586      ;
; -0.555 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.586      ;
; -0.555 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.586      ;
; -0.555 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.586      ;
; -0.555 ; baud_done:inst6|p_count[7] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.586      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.553 ; baud_done:inst6|p_count[7] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.585      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.526 ; baud_done:inst6|p_count[5] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.558      ;
; -0.525 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.556      ;
; -0.525 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.556      ;
; -0.525 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.556      ;
; -0.525 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.556      ;
; -0.525 ; baud_done:inst6|p_count[6] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.556      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[3]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[4]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[5]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[6]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[7]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[8]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[9]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[10] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[11] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.523 ; baud_done:inst6|p_count[6] ; baud_done:inst6|p_count[1]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.555      ;
; -0.491 ; counter:inst9|p_cnt[0]     ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.491 ; counter:inst9|p_cnt[0]     ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.491 ; counter:inst9|p_cnt[0]     ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.491 ; counter:inst9|p_cnt[0]     ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.491 ; counter:inst9|p_cnt[0]     ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[9]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[8]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[7]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[6]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[5]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[4]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[3]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[2]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[1]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.489 ; baud_done:inst6|p_count[8] ; rxd_shift:inst8|pshift[0]   ; clk          ; clk         ; 1.000        ; 0.000      ; 1.521      ;
; -0.488 ; baud_done:inst6|p_count[3] ; counter:inst9|p_cnt[0]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.519      ;
; -0.488 ; baud_done:inst6|p_count[3] ; counter:inst9|p_cnt[1]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.519      ;
; -0.488 ; baud_done:inst6|p_count[3] ; counter:inst9|p_cnt[2]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.519      ;
; -0.488 ; baud_done:inst6|p_count[3] ; counter:inst9|p_cnt[3]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.519      ;
; -0.488 ; baud_done:inst6|p_count[3] ; counter:inst9|p_cnt[4]      ; clk          ; clk         ; 1.000        ; -0.001     ; 1.519      ;
; -0.486 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[0]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.518      ;
; -0.486 ; baud_done:inst6|p_count[3] ; baud_done:inst6|p_count[2]  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.518      ;
+--------+----------------------------+-----------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'data_in'                                                                                                            ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; 1.263 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; data_in     ; 1.000        ; 1.282      ; 0.745      ;
; 1.335 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; data_in     ; 1.000        ; 1.271      ; 0.590      ;
; 1.347 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; data_in     ; 1.000        ; 1.281      ; 0.589      ;
; 1.350 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; data_in     ; 1.000        ; 1.279      ; 0.655      ;
; 1.355 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; data_in     ; 1.000        ; 1.289      ; 0.658      ;
; 1.356 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; data_in     ; 1.000        ; 1.289      ; 0.589      ;
; 1.356 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; data_in     ; 1.000        ; 1.285      ; 0.655      ;
; 1.360 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; data_in     ; 1.000        ; 1.289      ; 0.653      ;
+-------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'data_in'                                                                                                              ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; -0.700 ; rxd_shift:inst8|pshift[6] ; rxd_shift:inst8|data_out1[2] ; clk          ; data_in     ; 0.000        ; 1.289      ; 0.589      ;
; -0.692 ; rxd_shift:inst8|pshift[2] ; rxd_shift:inst8|data_out2[2] ; clk          ; data_in     ; 0.000        ; 1.281      ; 0.589      ;
; -0.681 ; rxd_shift:inst8|pshift[3] ; rxd_shift:inst8|data_out2[3] ; clk          ; data_in     ; 0.000        ; 1.271      ; 0.590      ;
; -0.636 ; rxd_shift:inst8|pshift[7] ; rxd_shift:inst8|data_out1[3] ; clk          ; data_in     ; 0.000        ; 1.289      ; 0.653      ;
; -0.631 ; rxd_shift:inst8|pshift[5] ; rxd_shift:inst8|data_out1[1] ; clk          ; data_in     ; 0.000        ; 1.289      ; 0.658      ;
; -0.630 ; rxd_shift:inst8|pshift[4] ; rxd_shift:inst8|data_out1[0] ; clk          ; data_in     ; 0.000        ; 1.285      ; 0.655      ;
; -0.624 ; rxd_shift:inst8|pshift[1] ; rxd_shift:inst8|data_out2[1] ; clk          ; data_in     ; 0.000        ; 1.279      ; 0.655      ;
; -0.537 ; rxd_shift:inst8|pshift[0] ; rxd_shift:inst8|data_out2[0] ; clk          ; data_in     ; 0.000        ; 1.282      ; 0.745      ;
+--------+---------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                       ;
+--------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; -0.079 ; data_in                       ; rxd_controller:inst|p_state.Q ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.732      ;
; -0.046 ; data_in                       ; rxd_controller:inst|p_state.P ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.765      ;
; 0.009  ; data_in                       ; rxd_shift:inst8|pshift[9]     ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.821      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[0]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[2]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[3]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[4]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[5]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[6]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[7]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[8]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[9]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[10]   ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[11]   ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.017  ; data_in                       ; baud_done:inst6|p_count[1]    ; data_in      ; clk         ; 0.000        ; 1.660      ; 1.829      ;
; 0.028  ; data_in                       ; counter:inst9|p_cnt[0]        ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.839      ;
; 0.028  ; data_in                       ; counter:inst9|p_cnt[1]        ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.839      ;
; 0.028  ; data_in                       ; counter:inst9|p_cnt[2]        ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.839      ;
; 0.028  ; data_in                       ; counter:inst9|p_cnt[3]        ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.839      ;
; 0.028  ; data_in                       ; counter:inst9|p_cnt[4]        ; data_in      ; clk         ; 0.000        ; 1.659      ; 1.839      ;
; 0.089  ; data_in                       ; rxd_controller:inst|p_state.S ; data_in      ; clk         ; 0.000        ; 2.129      ; 2.370      ;
; 0.100  ; rxd_controller:inst|p_state.R ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.470      ; 0.722      ;
; 0.215  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.Q ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; rxd_controller:inst|p_state.P ; rxd_controller:inst|p_state.P ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; rxd_controller:inst|p_state.S ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.252  ; baud_done:inst6|p_count[11]   ; baud_done:inst6|p_count[11]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.404      ;
; 0.302  ; rxd_controller:inst|p_state.Q ; rxd_controller:inst|p_state.R ; clk          ; clk         ; 0.000        ; 0.000      ; 0.454      ;
; 0.357  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[0]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.509      ;
; 0.368  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.520      ;
; 0.368  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[2]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.520      ;
; 0.369  ; counter:inst9|p_cnt[4]        ; counter:inst9|p_cnt[4]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.521      ;
; 0.370  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[9]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.522      ;
; 0.371  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[7]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.376  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[5]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.528      ;
; 0.376  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[6]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.528      ;
; 0.377  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.529      ;
; 0.379  ; rxd_shift:inst8|pshift[9]     ; rxd_shift:inst8|pshift[8]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.531      ;
; 0.380  ; rxd_shift:inst8|pshift[8]     ; rxd_shift:inst8|pshift[7]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.532      ;
; 0.382  ; rxd_shift:inst8|pshift[1]     ; rxd_shift:inst8|pshift[0]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.534      ;
; 0.390  ; counter:inst9|p_cnt[4]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.470      ; 1.012      ;
; 0.404  ; rxd_shift:inst8|pshift[4]     ; rxd_shift:inst8|pshift[3]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.556      ;
; 0.421  ; data_in                       ; rxd_controller:inst|p_state.Q ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.732      ;
; 0.436  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.588      ;
; 0.436  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[8]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.588      ;
; 0.437  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[10]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.589      ;
; 0.440  ; counter:inst9|p_cnt[3]        ; counter:inst9|p_cnt[3]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.592      ;
; 0.441  ; counter:inst9|p_cnt[1]        ; counter:inst9|p_cnt[1]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.593      ;
; 0.448  ; baud_done:inst6|p_count[4]    ; baud_done:inst6|p_count[4]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.600      ;
; 0.452  ; counter:inst9|p_cnt[0]        ; counter:inst9|p_cnt[0]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.604      ;
; 0.454  ; data_in                       ; rxd_controller:inst|p_state.P ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.765      ;
; 0.484  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[6]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.637      ;
; 0.484  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[7]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.637      ;
; 0.487  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[1]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.640      ;
; 0.487  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[8]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.640      ;
; 0.489  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[4]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.642      ;
; 0.489  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[2]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.642      ;
; 0.489  ; rxd_shift:inst8|pshift[2]     ; rxd_shift:inst8|pshift[1]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.641      ;
; 0.495  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[1]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.647      ;
; 0.505  ; rxd_controller:inst|p_state.R ; rxd_controller:inst|p_state.R ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.506  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.658      ;
; 0.506  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[3]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.658      ;
; 0.508  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[10]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.660      ;
; 0.509  ; data_in                       ; rxd_shift:inst8|pshift[9]     ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.821      ;
; 0.516  ; baud_done:inst6|p_count[6]    ; baud_done:inst6|p_count[7]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.668      ;
; 0.516  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[6]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.668      ;
; 0.517  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[4]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.669      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[0]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[2]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[3]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[4]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[5]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[6]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[7]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[8]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[9]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[10]   ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[11]   ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.517  ; data_in                       ; baud_done:inst6|p_count[1]    ; data_in      ; clk         ; -0.500       ; 1.660      ; 1.829      ;
; 0.521  ; rxd_controller:inst|p_state.R ; rxd_shift:inst8|pshift[0]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.674      ;
; 0.522  ; counter:inst9|p_cnt[3]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.470      ; 1.144      ;
; 0.528  ; data_in                       ; counter:inst9|p_cnt[0]        ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.839      ;
; 0.528  ; data_in                       ; counter:inst9|p_cnt[1]        ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.839      ;
; 0.528  ; data_in                       ; counter:inst9|p_cnt[2]        ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.839      ;
; 0.528  ; data_in                       ; counter:inst9|p_cnt[3]        ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.839      ;
; 0.528  ; data_in                       ; counter:inst9|p_cnt[4]        ; data_in      ; clk         ; -0.500       ; 1.659      ; 1.839      ;
; 0.530  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[2]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.682      ;
; 0.541  ; counter:inst9|p_cnt[2]        ; counter:inst9|p_cnt[4]        ; clk          ; clk         ; 0.000        ; 0.000      ; 0.693      ;
; 0.541  ; baud_done:inst6|p_count[1]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.693      ;
; 0.543  ; baud_done:inst6|p_count[9]    ; baud_done:inst6|p_count[11]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.695      ;
; 0.550  ; rxd_shift:inst8|pshift[6]     ; rxd_shift:inst8|pshift[5]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.702      ;
; 0.551  ; baud_done:inst6|p_count[5]    ; baud_done:inst6|p_count[7]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.703      ;
; 0.552  ; baud_done:inst6|p_count[3]    ; baud_done:inst6|p_count[5]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.704      ;
; 0.557  ; counter:inst9|p_cnt[2]        ; rxd_controller:inst|p_state.S ; clk          ; clk         ; 0.000        ; 0.470      ; 1.179      ;
; 0.560  ; rxd_shift:inst8|pshift[3]     ; rxd_shift:inst8|pshift[2]     ; clk          ; clk         ; 0.000        ; 0.000      ; 0.712      ;
; 0.564  ; baud_done:inst6|p_count[7]    ; baud_done:inst6|p_count[8]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.716      ;
; 0.565  ; baud_done:inst6|p_count[0]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.717      ;
; 0.572  ; counter:inst9|p_cnt[4]        ; rxd_shift:inst8|pshift[3]     ; clk          ; clk         ; 0.000        ; 0.001      ; 0.725      ;
; 0.574  ; baud_done:inst6|p_count[8]    ; baud_done:inst6|p_count[9]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.726      ;
; 0.574  ; baud_done:inst6|p_count[2]    ; baud_done:inst6|p_count[3]    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.726      ;
; 0.575  ; baud_done:inst6|p_count[10]   ; baud_done:inst6|p_count[11]   ; clk          ; clk         ; 0.000        ; 0.000      ; 0.727      ;
+--------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[10]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[11]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[8]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; baud_done:inst6|p_count[9]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; counter:inst9|p_cnt[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.P ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.Q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.R ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_controller:inst|p_state.S ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; rxd_shift:inst8|pshift[9]     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[10]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[11]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[4]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[5]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[6]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[7]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[8]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst6|p_count[9]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; inst8|pshift[2]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; inst8|pshift[3]|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'data_in'                                                                              ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock   ; Clock Edge ; Target                              ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; data_in ; Rise       ; data_in                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; data_in|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; data_in|combout                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out1[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out1[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[0]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[1]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[2]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst8|data_out2[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst8|data_out2[3]|datad            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; inst|parity_check~0|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; inst|parity_check~0|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[1]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[1]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[2]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[2]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out1[3]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out1[3]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[1]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[1]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[2]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[2]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; data_in ; Rise       ; rxd_shift:inst8|data_out2[3]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; data_in ; Rise       ; rxd_shift:inst8|data_out2[3]        ;
+--------+--------------+----------------+------------------+---------+------------+-------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 0.209 ; 0.209 ; Rise       ; clk             ;
; reset     ; clk        ; 3.314 ; 3.314 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; 0.079  ; 0.079  ; Rise       ; clk             ;
; reset     ; clk        ; -2.383 ; -2.383 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------+
; Clock to Output Times                                                     ;
+---------------+------------+-------+-------+------------+-----------------+
; Data Port     ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------+------------+-------+-------+------------+-----------------+
; framing_error ; clk        ; 5.017 ; 5.017 ; Rise       ; clk             ;
; parity_error  ; clk        ; 5.714 ; 5.714 ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 7.050 ; 7.050 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 6.924 ; 6.924 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 6.921 ; 6.921 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 6.890 ; 6.890 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 6.893 ; 6.893 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 6.896 ; 6.896 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 7.050 ; 7.050 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 6.993 ; 6.993 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 6.865 ; 6.865 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 6.865 ; 6.865 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 6.860 ; 6.860 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 6.862 ; 6.862 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 6.715 ; 6.715 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 6.714 ; 6.714 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 6.686 ; 6.686 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 6.688 ; 6.688 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Fall       ; data_in         ;
+---------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------+
; Minimum Clock to Output Times                                             ;
+---------------+------------+-------+-------+------------+-----------------+
; Data Port     ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------+------------+-------+-------+------------+-----------------+
; framing_error ; clk        ; 4.614 ; 4.614 ; Rise       ; clk             ;
; parity_error  ; clk        ; 5.320 ; 5.320 ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 6.059 ; 6.059 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 6.063 ; 6.063 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 6.034 ; 6.034 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 6.183 ; 6.183 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 6.130 ; 6.130 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 6.056 ; 6.056 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 6.230 ; 6.230 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 6.227 ; 6.227 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 6.235 ; 6.235 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 6.085 ; 6.085 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 6.081 ; 6.081 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 6.056 ; 6.056 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 6.058 ; 6.058 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Fall       ; data_in         ;
+---------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                             ;
+------------------+---------+---------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+---------+----------+---------+---------------------+
; Worst-case Slack ; -2.415  ; -1.484  ; N/A      ; N/A     ; -1.380              ;
;  clk             ; -2.415  ; -0.079  ; N/A      ; N/A     ; -1.380              ;
;  data_in         ; 1.263   ; -1.484  ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -69.04  ; -10.879 ; 0.0      ; 0.0     ; -33.602             ;
;  clk             ; -69.040 ; -0.125  ; N/A      ; N/A     ; -32.380             ;
;  data_in         ; 0.000   ; -10.879 ; N/A      ; N/A     ; -1.222              ;
+------------------+---------+---------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; data_in   ; clk        ; 0.958 ; 0.958 ; Rise       ; clk             ;
; reset     ; clk        ; 6.126 ; 6.126 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; data_in   ; clk        ; 0.079  ; 0.079  ; Rise       ; clk             ;
; reset     ; clk        ; -2.383 ; -2.383 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------+
; Clock to Output Times                                                       ;
+---------------+------------+--------+--------+------------+-----------------+
; Data Port     ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+---------------+------------+--------+--------+------------+-----------------+
; framing_error ; clk        ; 9.393  ; 9.393  ; Rise       ; clk             ;
; parity_error  ; clk        ; 11.011 ; 11.011 ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 13.840 ; 13.840 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 13.557 ; 13.557 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 13.569 ; 13.569 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 13.503 ; 13.503 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 13.541 ; 13.541 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 13.530 ; 13.530 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 13.840 ; 13.840 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 13.726 ; 13.726 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 13.393 ; 13.393 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 13.370 ; 13.370 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 13.146 ; 13.146 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 13.142 ; 13.142 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 13.114 ; 13.114 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 13.125 ; 13.125 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Rise       ; data_in         ;
; framing_error ; data_in    ; 10.535 ; 10.535 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 8.668  ; 8.668  ; Fall       ; data_in         ;
+---------------+------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------+
; Minimum Clock to Output Times                                             ;
+---------------+------------+-------+-------+------------+-----------------+
; Data Port     ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------+------------+-------+-------+------------+-----------------+
; framing_error ; clk        ; 4.614 ; 4.614 ; Rise       ; clk             ;
; parity_error  ; clk        ; 5.320 ; 5.320 ; Rise       ; clk             ;
; 7seg1[*]      ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[0]     ; data_in    ; 6.059 ; 6.059 ; Rise       ; data_in         ;
;  7seg1[1]     ; data_in    ; 6.063 ; 6.063 ; Rise       ; data_in         ;
;  7seg1[2]     ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[3]     ; data_in    ; 6.034 ; 6.034 ; Rise       ; data_in         ;
;  7seg1[4]     ; data_in    ; 6.031 ; 6.031 ; Rise       ; data_in         ;
;  7seg1[5]     ; data_in    ; 6.183 ; 6.183 ; Rise       ; data_in         ;
;  7seg1[6]     ; data_in    ; 6.130 ; 6.130 ; Rise       ; data_in         ;
; 7seg2[*]      ; data_in    ; 6.056 ; 6.056 ; Rise       ; data_in         ;
;  7seg2[0]     ; data_in    ; 6.230 ; 6.230 ; Rise       ; data_in         ;
;  7seg2[1]     ; data_in    ; 6.227 ; 6.227 ; Rise       ; data_in         ;
;  7seg2[2]     ; data_in    ; 6.235 ; 6.235 ; Rise       ; data_in         ;
;  7seg2[3]     ; data_in    ; 6.085 ; 6.085 ; Rise       ; data_in         ;
;  7seg2[4]     ; data_in    ; 6.081 ; 6.081 ; Rise       ; data_in         ;
;  7seg2[5]     ; data_in    ; 6.056 ; 6.056 ; Rise       ; data_in         ;
;  7seg2[6]     ; data_in    ; 6.058 ; 6.058 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Rise       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Rise       ; data_in         ;
; framing_error ; data_in    ; 5.935 ; 5.935 ; Fall       ; data_in         ;
; parity_error  ; data_in    ; 4.390 ; 4.390 ; Fall       ; data_in         ;
+---------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 965      ; 0        ; 0        ; 0        ;
; data_in    ; clk      ; 26       ; 26       ; 0        ; 0        ;
; clk        ; data_in  ; 8        ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 965      ; 0        ; 0        ; 0        ;
; data_in    ; clk      ; 26       ; 26       ; 0        ; 0        ;
; clk        ; data_in  ; 8        ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 2     ; 2    ;
; Unconstrained Input Port Paths  ; 16    ; 16   ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 70    ; 70   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Fri Nov 13 15:53:28 2015
Info: Command: quartus_sta receiver -c receiver
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 8 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'receiver.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name data_in data_in
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.415
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.415       -69.040 clk 
    Info (332119):     1.450         0.000 data_in 
Info (332146): Worst-case hold slack is -1.484
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.484       -10.879 data_in 
    Info (332119):     0.016         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -32.380 clk 
    Info (332119):    -1.222        -1.222 data_in 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.596
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.596       -15.891 clk 
    Info (332119):     1.263         0.000 data_in 
Info (332146): Worst-case hold slack is -0.700
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.700        -5.131 data_in 
    Info (332119):    -0.079        -0.125 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -32.380 clk 
    Info (332119):    -1.222        -1.222 data_in 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 402 megabytes
    Info: Processing ended: Fri Nov 13 15:53:29 2015
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


